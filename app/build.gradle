import groovy.xml.XmlSlurper

apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
rootProject.ext.configPath = "../device-config.json"
apply from: "../parse_json.gradle"

android {
    namespace 'com.tencent.iot.twcall'
    compileSdk 34

    defaultConfig {
        applicationId "com.tencent.iot.twcall"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'productId', "\"${getValue('productId')}\""
        buildConfigField 'String', 'deviceName', "\"${getValue('deviceName')}\""
        buildConfigField 'String', 'deviceKey', "\"${getValue('deviceKey')}\""
        buildConfigField 'String', 'appId', "\"${getValue('appId')}\""
        buildConfigField 'String', 'modelId', "\"${getValue('modelId')}\""
        buildConfigField 'String', 'openId', "\"${getValue('openId')}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            def newApkName = "${getAppName()}-${variant.buildType.name}-${variant.versionName}.apk"
            outputFileName = newApkName
        }
    }
}

def getValue(String id) {
    Properties properties = new Properties()
    properties.load(new FileInputStream(rootProject.file("local.properties")))
    def value = properties.getProperty(id, "")
    if (value.isEmpty()) {
        value = "${getValueById(id)}"
    }
    return value
}

def getAppName() {
    def stringsFile = file("${projectDir}/src/main/res/values/strings.xml")
    def strings = new XmlSlurper().parse(stringsFile)
    def appName = strings.string.find { it.@name == 'app_name' }.text()
    return appName
}

dependencies {
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.crashreport
    implementation libs.androidx.core.ktx
    implementation libs.kotlinx.coroutines.android
    implementation libs.gson
    implementation 'com.tencent.iot.video:video-device-android:1.0.7.9.03-SNAPSHOT'
}